{
  "root": true,
  "env": {
    "es6": true
  },
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "plugins": [
        "rxjs",
        "import"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "globals": {
        "$localize": "readonly"
      },
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ]
      },
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "tm",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/no-explicit-any": "off",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "tm",
            "style": "camelCase"
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "constructors": "off"
            }
          }
        ],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "caughtErrors": "none",
            "args": "after-used",
            "argsIgnorePattern": "^_"
          }
        ],
        "arrow-parens": [
          "off",
          "always"
        ],
        "comma-dangle": "off",
        "@typescript-eslint/comma-dangle": [
          "error",
          "always-multiline"
        ],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "no-underscore-dangle": "off",
        "import/no-default-export": "error",
        "import/order": "off",
        "arrow-body-style": "off",
        "semi": "off",
        "@typescript-eslint/semi": "error",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "UPPER_CASE"
            ]
          },
          {
            "selector": [
              "objectLiteralProperty",
              "classProperty"
            ],
            "format": [
              "camelCase",
              "UPPER_CASE",
              "snake_case"
            ],
            "leadingUnderscore": "allowSingleOrDouble"
          }
        ],
        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "named": "ignore",
            "asyncArrow": "always"
          }
        ],
        "object-curly-spacing": [
          "error",
          "always"
        ],
        "no-array-constructor": [
          "error"
        ],
        "array-bracket-spacing": [
          "error",
          "always",
          {
            "arraysInArrays": false,
            "objectsInArrays": false,
            "singleValue": false
          }
        ],
        "comma-spacing": [
          "error",
          {
            "before": false,
            "after": true
          }
        ],
        "max-len": [
          "error",
          180
        ],
        "rxjs/no-cyclic-action": "off",
        "rxjs/finnish": [
          "error",
          {
            "functions": true,
            "methods": true,
            "names": {
              "^(canActivate|canActivateChild|canDeactivate|canLoad|intercept|resolve|validate)$": false
            },
            "parameters": true,
            "properties": true,
            "strict": false,
            "types": {
              "^EventEmitter$": false,
              "^Subject": false
            },
            "variables": true
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ]
      }
    },
    {
      "files": [
        "*.spec.ts",
        "*.mock.ts"
      ],
      "env": {
        "jest": true
      },
      "rules": {
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "rxjs/finnish": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-empty-function": "off"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
